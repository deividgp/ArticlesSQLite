@using Microsoft.EntityFrameworkCore
<h3>FormFamilies</h3>

<EditForm Model="familia" OnValidSubmit="submit">
    <div class="form-group mb-3">
        <label for="codi">CodiFamilia</label>
        <InputText @bind-Value="familia.CodiFamilia" class=form-control id="codi" />
    </div>

    <div class="form-group mb-3">
        <label for="descripcio">Descripció</label>
        <InputText @bind-Value="familia.Descripcio" class=form-control id="descripcio" />
    </div>

    <DataAnnotationsValidator />
    <ValidationSummary />

    <button class="btn btn-success" type="submit">Save</button>
    <a @onclick="hideModal" class="btn btn-secondary">Cancel</a>
</EditForm>

@code {
    [Inject] 
    NavigationManager NavigationManager { get; set; }
    [Inject] 
    ArticlesDbContext ArticlesDbContext { get; set; }
    private Familia familia;
    [Parameter] 
    public string codi { get; set; }
    [Parameter]
    public bool showModal { get; set; }
    [Parameter]
    public EventCallback<bool> ShowModalChanged { get; set; }
    [Parameter]
    public EventCallback<bool> OnSubmit { get; set; }

    protected override async Task OnInitializedAsync()
    {
        familia = await ArticlesDbContext.Families.FindAsync(codi);
        if (familia == null)
        {
            familia = new();
            codi = "";
        }
    }

    private async Task submit(){
        if (codi == "")
        {
            await ArticlesDbContext.Families.AddAsync(familia);
        }
        else
        {
            ArticlesDbContext.Families.Update(familia);
        }
        await ArticlesDbContext.SaveChangesAsync();
        await hideModal();
        await OnSubmit.InvokeAsync(true);
    }

    private async Task hideModal()
    {
        showModal = false;
        await ShowModalChanged.InvokeAsync(showModal);
    }
}