@using Microsoft.EntityFrameworkCore
<h3>FormArticles</h3>

<EditForm Model="article" OnValidSubmit="submit">
    <div class="form-group mb-3">
        <label for="codi">CodiArticle</label>
        <InputText @bind-Value="article.CodiArticle" class=form-control id="codi" />
    </div>

    <div class="form-group mb-3">
        <label for="codifam">CodiFamilia</label>
        <InputSelect @bind-Value="article.CodiFamilia" class=form-control id="codifam">
            @foreach (var codi in codisFamilia)
            {
               <option value="@codi">@codi</option>
            }
        </InputSelect>
    </div>

    <div class="form-group mb-3">
        <label for="descripcio">Descripció</label>
        <InputText @bind-Value="article.Descripcio" class=form-control id="descripcio" />
    </div>

    <div class="form-group mb-3">
        <label for="envas">Envàs</label>
        <InputNumber @bind-Value="article.Envas" class=form-control id="envas" />
    </div>

    <div class="form-group mb-3">
        <label for="pes">Pes</label>
        <InputNumber @bind-Value="article.Pes" class=form-control id="pes" />
    </div>

    <div class="form-group mb-3">
        <label for="nofac">NoFacturar</label>
        <InputCheckbox @bind-Value="article.NoFacturar" id="nofac" />
    </div>

    <div class="form-group mb-3">
        <label for="nosortir">NoSortirInventaris</label>
        <InputCheckbox @bind-Value="article.NoSortirInventaris" id="nosortir" />
    </div>

    <div class="form-group mb-3">
        <label for="stockmin">StockMínim</label>
        <InputNumber @bind-Value="article.StockMinim" class=form-control id="stockmin" />
    </div>

    <div class="form-group mb-3">
        <label for="stockrup">StockRuptura</label>
        <InputNumber @bind-Value="article.StockRuptura" class=form-control id="stockrup" />
    </div>

    <div class="form-group mb-3">
        <label for="controlstock">ControlStock</label>
        <InputCheckbox @bind-Value="article.ControlStock" id="controlstock" />
    </div>

    <div class="form-group mb-3">
        <label for="stockpend">StockPendRebre</label>
        <InputNumber @bind-Value="article.StockPendRebre" class=form-control id="stockpend" />
    </div>

    <div class="form-group mb-3">
        <label for="comisio">Comisio</label>
        <InputNumber @bind-Value="article.Comisio" class=form-control id="comisio" />
    </div>

    <div class="form-group mb-3">
        <label for="preucost">PreuCostMig</label>
        <InputNumber @bind-Value="article.PreuCostMig" class=form-control id="preucost" />
    </div>

    <div class="form-group mb-3">
        <label for="stockcost">StockCost</label>
        <InputNumber @bind-Value="article.StockCost" class=form-control id="stockcost" />
    </div>

    <div class="form-group mb-3">
        <label for="preucost">PreuCostUltim</label>
        <InputNumber @bind-Value="article.PreuCostUltim" class=form-control id="preucost" />
    </div>

    <div class="form-group mb-3">
        <label for="preuvenda">PreuVenda</label>
        <InputNumber @bind-Value="article.PreuVenda" class=form-control id="preuvenda" />
    </div>

    <div class="form-group mb-3">
        <label for="observacions">Observacions</label>
        <InputText @bind-Value="article.Observacions" class=form-control id="observacions" />
    </div>

    <DataAnnotationsValidator />
    <ValidationSummary />

    <button class="btn btn-success" type="submit">Save</button>
    <a @onclick="hideModal" class="btn btn-secondary">Cancel</a>
</EditForm>

@code {
    [Inject] 
    NavigationManager NavigationManager { get; set; }
    [Inject] 
    ArticlesDbContext ArticlesDbContext { get; set; }
    private Article article;
    private IEnumerable<String> codisFamilia;
    [Parameter]
    public string codi { get; set; }
    [Parameter]
    public bool showModal { get; set; }
    [Parameter]
    public EventCallback<bool> ShowModalChanged { get; set; }
    [Parameter]
    public EventCallback<bool> OnSubmit { get; set; }

    protected override async Task OnInitializedAsync()
    {
        article = await ArticlesDbContext.Articles.FindAsync(codi);
        codisFamilia = await ArticlesDbContext.Families.Select(f => f.CodiFamilia).ToListAsync();
        if (article == null)
        {
            article = new();
            codi = "";
        }
    }

    private async Task submit(){
        if (codi == "")
        {
            await ArticlesDbContext.Articles.AddAsync(article);
        }
        else
        {
            ArticlesDbContext.Articles.Update(article);
        }
        await ArticlesDbContext.SaveChangesAsync();
        await hideModal();
        await OnSubmit.InvokeAsync(true);
    }

    private async Task hideModal()
    {
        showModal = false;
        await ShowModalChanged.InvokeAsync(showModal);
    }
}
